#!/bin/bash
# CLI script to expand tool mapping
# Copyright (C) 2025 Eser KUBALI <lxldev.contact@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later

# This file is part of aurgen project and is licensed under
# the GNU General Public License v3.0 or later.
# See the LICENSE file in the project root for details.

set -euo pipefail

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LIB_DIR="$SCRIPT_DIR/../lib"

# Source libraries
# shellcheck source=/dev/null
source "$LIB_DIR/expand-mapping.sh"
# shellcheck source=/dev/null
source "$LIB_DIR/apply-expanded-mapping.sh"

# Show usage
show_usage() {
    cat << EOF
Usage: $(basename "$0") [OPTIONS] COMMAND

Commands:
  generate    Generate expanded mapping only
  apply       Apply expanded mapping to tool-mapping.sh
  update      Generate and apply expanded mapping (default)

Options:
  -h, --help  Show this help message

Examples:
  $(basename "$0") generate    # Generate mapping only
  $(basename "$0") apply       # Apply existing mapping
  $(basename "$0") update      # Generate and apply
  $(basename "$0")             # Same as update

EOF
}

# Main function
main() {
    local command="update"
    
    # Parse arguments
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_usage
                exit 0
                ;;
            generate|apply|update)
                command="$1"
                shift
                ;;
            *)
                echo "Unknown option: $1" >&2
                show_usage >&2
                exit 1
                ;;
        esac
    done
    
    # Execute command
    case "$command" in
        generate)
            echo "Generating expanded mapping..."
            expand_tool_mapping
            ;;
        apply)
            echo "Applying expanded mapping..."
            update_tool_mapping
            ;;
        update)
            echo "Generating and applying expanded mapping..."
            expand_tool_mapping
            echo
            update_tool_mapping
            ;;
    esac
}

# Run main function
main "$@" 